name: Test Suite

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - 'create-package/package.json'  # Ignore version bump commits
  pull_request:
    branches: [ main ]

jobs:
  test-template:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run unit tests
        run: npm test

      - name: Build applications
        run: npm run build

  test-cli-tool:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install create-package dependencies
        run: |
          cd create-package
          npm ci

      - name: Clean template directory
        run: |
          rm -rf create-package/template

      - name: Build template
        run: |
          cd create-package
          npm run build

      - name: Test CLI tool creation
        run: |
          cd /tmp
          node $GITHUB_WORKSPACE/create-package/bin/cli.js test-cli-project --no-install
          
          # Verify project structure
          test -d test-cli-project/client "Client directory should exist"
          test -d test-cli-project/server "Server directory should exist"
          test -f test-cli-project/package.json "Root package.json should exist"
          test -f test-cli-project/nx.json "Nx config should exist"
          test -f test-cli-project/docker-compose.yml "Docker compose should exist"
          
          echo "✅ CLI tool test passed!"

      - name: Test generated project
        run: |
          cd /tmp/test-cli-project
          npm ci
          
          # Test that the generated project can build
          npm run build:server
          npm run build:client
          
          # Test that tests can run
          npm run test:server
          npm run test:client
          
          echo "✅ Generated project test passed!"

  test-docker:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Build Docker images
        run: |
          docker-compose build

      - name: Test Docker containers
        run: |
          # Start containers in detached mode
          docker-compose up -d
          
          # Wait for services to be ready
          sleep 30
          
          # Test server health
          curl -f http://localhost:3000 || exit 1
          
          # Test client availability  
          curl -f http://localhost:80 || exit 1
          
          echo "✅ Docker test passed!"

      - name: Cleanup
        run: |
          docker-compose down
